딕셔너리를 공부해보자!

사람은 누구든지 "이름" = "홍길동", "생일" = "몇 월 며칠" 등과 같은 방식으로 그 사람이 가진 정보를 나타낼 수 있다.
파이썬은 영리하게도 이러한 대응 관계를 나타낼 수 있는 딕셔너리(dictionary) 자료형을 가지고 있다. 
이번에는 이 자료형에 대해 알아보자.

요즘 사용하는 대부분의 언어도 이러한 대응 관계를 나타내는 자료형을 가지고 있는데 이를 딕셔너리라고 하고, 
‘연관 배열(associative array)’또는 ‘해시(hash)’라고도 한다.

딕셔너리는 단어 그대로 ‘사전’이라는 뜻이다. 즉 "people"이라는 단어에 "사람", "baseball"이라는 단어에
"야구"라는 뜻이 부합되듯이 딕셔너리는 Key와 Value를 한 쌍으로 가지는 자료형이다. 
예컨대 Key가 "baseball"이라면 Value는 "야구"가 될 것이다.

딕셔너리는 리스트나 튜플처럼 순차적으로(sequential) 해당 요솟값을 구하지 않고 Key를 통해 Value를 얻는다. 
이것이 바로 딕셔너리의 가장 큰 특징이다. baseball이라는 단어의 뜻을 찾기 위해 사전의 내용을 순차적으로 
모두 검색하는 것이 아니라 baseball이라는 단어가 있는 곳만 펼쳐 보는 것이다.

딕셔너리의 기본 모습.
{Key1: Value1, Key2: Value2, Key3: Value3, ...}
Key와 Value의 쌍 여러 개가 {}로 둘러싸여 있다. 각각의 요소는 Key: Value 형태로 이루어져 있고 쉼표(,)로 구분되어 있다.

dic = {'name': 'pey', 'phone': '010-9999-1234', 'birth': '1118'}
위에서 Key는 각각 'name', 'phone', 'birth', 각각의 Key에 해당하는 Value는 
'pey', '010-9999-1234', '1118'이 된다.

위의 딕셔너리 dic의 정보
key   ㅣ value
name  ㅣ pey
phone ㅣ 010-9999-1234
birth ㅣ 1118
key로 정숫값 1,value로 문자열 'hi'를 사용한 예이다.

py = {1:"hi")
또한 다음 예처럼 Value에 리스트도 넣을 수 있다.
py = {'a':[1,2,3]}

#닥셔너리 쌍 추가, 삭제하기 
딕셔너리 쌍을 추가 또는 삭제하는 방법을 살펴보자, 먼저 딕셔너리에 쌍을 추가해 보자.

딕셔너리 쌍 추가하기
py = {1:'a'}
py[2] = 'b'
py
{1:'a',2:'b'}
{1: 'a'} 딕셔너리에 a[2] = 'b'와 같이 입력하면
딕셔너리 py에 Key와 Value가 각각 2와 'b'인 {2: 'b'} 딕셔너리 쌍이 추가된다.

py['name'] = 'pey'
py
{1:'a',2:'b','name':'pey'}
딕셔너리 py에 {'name':'pey'}

py[3] = [1,2,3]
py
{1:'a',2:'b','name':'pey',3:[1,2,3]}
key는 3, Value는 [1,2,3]을 가지는 한 쌍이 또 추가되었다.








